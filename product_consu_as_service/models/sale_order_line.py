# -*- coding: utf-8 -*-
# (c) 2024 Nexta - Jaume Basiero <jbasiero@nextads.es>
# License AGPL-3.0 or later (http://www.gnu.org/licenses/a

from odoo import models, fields, api, _


class SaleOrderLine(models.Model):
    _inherit = 'sale.order.line'

    @api.depends('product_id.type')
    def _compute_is_service(self):
        for so_line in self:
            so_line.is_service = True


    # def _timesheet_create_project(self):
    #     """ Generate project for the given so line, and link it.
    #         :param project: record of project.project in which the task should be created
    #         :return task: record of the created task
    #     """
    #     self.ensure_one()
    #     values = self._timesheet_create_project_prepare_values()
    #     if self.product_id.project_template_id:
    #         values['name'] = "%s - %s" % (values['name'], self.product_id.project_template_id.name)
    #         # The no_create_folder context key is used in documents_project
    #         project = self.product_id.project_template_id.with_context(no_create_folder=True).copy(values)
    #         project.tasks.write({
    #             'sale_line_id': self.id,
    #             'partner_id': self.order_id.partner_id.id,
    #             'email_from': self.order_id.partner_id.email,
    #         })
    #         # duplicating a project doesn't set the SO on sub-tasks
    #         project.tasks.filtered('parent_id').write({
    #             'sale_line_id': self.id,
    #             'sale_order_id': self.order_id.id,
    #         })
    #     else:
    #         project_only_sol_count = self.env['sale.order.line'].search_count([
    #             ('order_id', '=', self.order_id.id),
    #             ('product_id.service_tracking', 'in', ['project_only', 'task_in_project']),
    #         ])
    #         if project_only_sol_count == 1 and self.order_id.description and not self.order_id.sale_order_template_id:
    #             values['name'] = "%s - %s" % (values['name'], self.order_id.description)
    #         elif project_only_sol_count == 1 and not self.order_id.description and not self.order_id.sale_order_template_id:
    #             values['name'] = "%s - %s" % (values['name'], self.product_id.name)
    #
    #         # The no_create_folder context key is used in documents_project
    #         project = self.env['project.project'].with_context(no_create_folder=True).create(values)
    #
    #     # Avoid new tasks to go to 'Undefined Stage'
    #     if not project.type_ids:
    #         project.type_ids = self.env['project.task.type'].create({'name': _('New')})
    #
    #     # link project as generated by current so line
    #     self.write({'project_id': project.id})
    #     return project
    #
    # def _timesheet_create_task_prepare_values(self, project):
    #     res = super(SaleOrderLine, self)._timesheet_create_task_prepare_values(project)
    #     # res.update({'name': self.order_id.name + ' ' + self.product_id.name})
    #     if self.order_id.sale_order_template_id:
    #         res.update({'name': "{} - {}".format(self.order_id.name, self.order_id.description)})
    #     return res
